/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/ {

    conditional_layers {
        compatible = "zmk, conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// |  TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp TAB   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHIFT
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RCTRL
        >;
        };
        lower_layer {
// -----------------------------------------------------------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | CAPS |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
        bindings = <
   &trans   &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6      &kp N7      &kp N8  &kp N9      &kp N0  &trans
   &kp CAPS &trans  &trans  &trans  &trans  &trans  &kp LEFT    &kp DOWN    &kp UP  &kp RIGHT   &trans  &trans
   &trans   &trans  &trans  &trans  &trans  &trans  &trans      &trans      &trans  &trans      &trans  &trans
                            &trans  &trans  &trans  &trans      &trans      &trans
        >;
        };

        raise_layer {
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// |      |     |     |  [  |  ]  |  =  |   |  _  |  (  |  )  |     |  \  |  `   |
// |      |     |     |     |     |  +  |   |  -  |  {  |  }  |     | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
        bindings = <
   &trans   &kp EXCL &kp AT &kp HASH    &kp DLLR    &kp PRCNT   &kp CARET   &kp AMPS    &kp ASTRK   &kp LPAR    &kp RPAR    &trans
   &trans   &trans   &trans &kp LBKT    &kp RBKT    &kp EQUAL   &kp UNDER   &kp LPAR    &kp RPAR    &trans      &kp BSLH    &kp GRAVE
   &trans   &trans   &trans &trans      &trans      &kp PLUS    &kp MINUS   &kp LBRC    &kp RBRC    &trans      &kp PIPE    &kp TILDE
                            &trans      &trans      &trans      &trans      &trans      &trans
        >;
        };

        bt_layer {
            display-name = "BT";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |      |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
        bindings = <
   &trans       &trans          &trans          &trans          &trans          &trans          &trans  &trans  &trans  &trans  &trans  &trans
   &bt BT_CLR   &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
   &trans       &trans          &trans          &trans          &trans          &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                                &trans          &trans          &trans          &trans  &trans  &trans
        >;
        };
    };
};
